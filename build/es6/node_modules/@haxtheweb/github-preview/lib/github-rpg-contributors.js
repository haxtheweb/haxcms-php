/**
 * Copyright 2025 Tushar
 * @license Apache-2.0, see LICENSE for full text.
 */
import{LitElement as r,html as t,css as i}from"../../../lit/index.js";import{DDDSuper as e}from"../../d-d-d/d-d-d.js";import"../../rpg-character/rpg-character.js";export class GithubRpgContributors extends(e(r)){static get tag(){return"github-rpg-contributors"}constructor(){super(),this.org="",this.repo="",this.limit=50,this.contributors=[]}static get properties(){return{...super.properties,org:{type:String},repo:{type:String},limit:{type:Number,reflect:!0},contributors:{type:Array}}}static get styles(){return[super.styles,i`
        :host {
          display: block;
          color: var(--ddd-theme-primary);
          background-color: var(--ddd-theme-accent);
          font-family: var(--ddd-font-navigation);
        }
        .wrapper {
          margin: var(--ddd-spacing-2);
          padding: var(--ddd-spacing-4);
        }
        h3 span {
          font-size: var(
            --github-rpg-contributors-label-font-size,
            var(--ddd-font-size-s)
          );
        }
        .rpg-wrapper {
          display: inline-flex;
          flex-wrap: wrap;
          justify-content: center;
        }
        .contributor {
          display: flex;
          flex-direction: column;
          align-items: center;
          margin: var(--ddd-spacing-1, 4px);
          padding: var(--ddd-spacing-2, 8px);
          border: 1px solid var(--ddd-theme-primary);
          border-radius: var(--ddd-border-radius);
          background-color: var(--ddd-theme-accent);
          color: var(--ddd-theme-primary);
        }
        .content {
          margin-top: var(--ddd-spacing-2);
        }
        .content div {
          text-align: center;
          display: block;
          color: var(--ddd-theme-primary);
          text-decoration: none;
        }
        :host:hover {
          text-decoration: underline;
        }
      `]}updated(r){super.updated(r),(r.has("org")||r.has("repo")&&this.org&&this.repo)&&this.fetchContributors()}fetchContributors(){const r=`https://api.github.com/repos/${this.org}/${this.repo}/contributors`;try{fetch(r).then((r=>r.ok?r.json():{})).then((r=>{r&&(this.contributors=[...r])}))}catch(r){console.error("error",r)}}render(){return t` <div class="wrapper">
        <h3>
          GitHub Repo:
          <a href="https://github.com/${this.org}/${this.repo}"
            >${this.org}/${this.repo}</a
          >
        </h3>
      </div>
      <div class="rpg-wrapper">
        ${this.contributors.filter(((r,t)=>t<this.limit||0===this.limit)).map((r=>t`
    <div class="contributor">
      <a href=https://github.com/${r.login}>
        <rpg-character seed="${r.login}"></rpg-character>
        <div class="content">
          <div>${r.login}</div>
          <div>Commits: ${r.contributions}</div>
        </div>
      </a>
    </div>
  `))}
      </div>`}static get haxProperties(){return new URL(`./${this.tag}.haxProperties.json`,import.meta.url).href}}globalThis.customElements.define(GithubRpgContributors.tag,GithubRpgContributors);