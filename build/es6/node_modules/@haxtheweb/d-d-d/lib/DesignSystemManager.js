import{LitElement as e}from"../../../lit/index.js";export class DesignSystem extends e{constructor(){super(),this.active=null,this.systems=[]}static get tag(){return"design-system"}static get properties(){return{active:{type:String},systems:{type:Object}}}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{"active"===t&&this[t]&&this.systems[this.active]&&globalThis.document&&globalThis.document.head&&this.applyDesignSystem(e?this.systems[e]:null,this.systems[this.active])}))}addDesignSystem(e){e.name&&e.styles&&e.fonts&&(this.systems[e.name]=e)}applyDesignSystem(e,t){if(e){try{globalThis.document.adoptedStyleSheets&&globalThis.document.adoptedStyleSheets.map(((e,t)=>{e.ds&&globalThis.document.adoptedStyleSheets.splice(t,1)}))}catch(e){const t=globalThis.document.createElement("style");t.innerHTML=globalStyles,globalThis.document.head.appendChild(t)}e.fonts&&globalThis.document.head.querySelectorAll("[data-ds]").forEach((e=>{e.remove()})),e.onload&&(globalThis.document.onload=null)}if(t){let e=t.styles.map((e=>e.cssText?e.cssText:"")).join("");try{const s=new CSSStyleSheet;s.ds=!0,s.replaceSync(e),t.hax&&(s.hax=!0),globalThis.document.adoptedStyleSheets=[...globalThis.document.adoptedStyleSheets,s]}catch(t){const s=globalThis.document.createElement("style");s.innerHTML=e,globalThis.document.head.appendChild(s)}t.fonts&&t.fonts.forEach((e=>{const t=globalThis.document.createElement("link");t.setAttribute("href",e),t.setAttribute("rel","stylesheet"),t.setAttribute("fetchpriority","low"),t.setAttribute("data-ds","font"),globalThis.document.head.appendChild(t)})),t.onload&&(globalThis.document.onload=t.onload())}}}globalThis.customElements.define(DesignSystem.tag,DesignSystem),globalThis.DesignSystemManager=globalThis.DesignSystemManager||{},globalThis.DesignSystemManager.requestAvailability=()=>{if(!globalThis.DesignSystemManager.instance&&globalThis.document&&globalThis.document.body){let e=globalThis.document.createElement("design-system");globalThis.document.body.appendChild(e),globalThis.DesignSystemManager.instance=e}return globalThis.DesignSystemManager.instance};export const DesignSystemManager=globalThis.DesignSystemManager.requestAvailability();