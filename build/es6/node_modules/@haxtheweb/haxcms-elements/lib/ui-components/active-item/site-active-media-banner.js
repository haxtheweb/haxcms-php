import{LitElement as i,html as e,css as t}from"../../../../../lit/index.js";import"../../../../simple-icon/lib/simple-icon-button-lite.js";import"../../../../simple-icon/lib/simple-icon-lite.js";import"../../../../simple-icon/lib/simple-icons.js";import"./site-active-title.js";import{store as a}from"../../core/haxcms-site-store.js";import{autorun as s,toJS as o}from"../../../../../mobx/dist/mobx.esm.js";import{DDDSuper as n}from"../../../../d-d-d/d-d-d.js";export class SiteActiveMediaBanner extends(n(i)){static get tag(){return"site-active-media-banner"}constructor(){super(),this.mediaSource="",this.fileExt="",this.mediaType="",this.playing=!0,this.canPlay=!1,this.icon="av:pause-circle-outline",this.description="",this.addEventListener("click",this.__videoHandler),this.__disposer=this.__disposer?this.__disposer:[],s((i=>{let e=o(a.activeItem);e&&e.metadata&&e.metadata.image?this.mediaSource=e.metadata.image:this.mediaSource="",this.__disposer.push(i)})),s((i=>{let e=o(a.activeItem);e&&e.description&&(this.description=e.description),this.__disposer.push(i)}))}static get properties(){return{mediaSource:{type:String,reflect:!0,attribute:"media-source"},fileExt:{type:String,attribute:"file-ext"},mediaType:{type:String,reflect:!0,attribute:"media-type"},playing:{type:Boolean,reflect:!0},canPlay:{type:Boolean,attribute:"can-play"},icon:{type:String},description:{type:String}}}static get styles(){return[t`
        :host {
          display: block;
          margin-left: 32px;
        }
        .media-banner {
          position: relative;
          height: 100%;
          height: var(--media-banner-height, 540px);
          width: 100%;
          z-index: 1;
        }
        .media-banner::before {
          position: absolute;
          content: "";
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: var(
            --media-banner-background-color,
            rgba(30, 64, 124, 0.7)
          );
          z-index: 1;
        }
        img,
        video {
          position: absolute;
          object-fit: cover;
          width: 100%;
          height: 100%;
          z-index: -1;
        }
        .content {
          position: relative;
          padding: var(--media-banner-padding, 0 46px);
          margin: var(--media-banner-margin, 0 auto);
          display: flex;
          justify-content: space-between;
          align-items: flex-end;
          color: var(--media-banner-font-color, white);
          overflow: hidden;
          max-width: var(--media-banner-max-width, 1080px);
          height: 100%;
          z-index: 1;
        }
        .page-title {
          width: 80%;
          margin-bottom: 60px;
        }
        simple-icon-button {
          --simple-icon-color: var(--media-banner-font-color, white);
          --simple-icon-button-focus-color: var(
            --media-banner-font-color,
            white
          );
          --simple-icon-width: var(--inline-audio-width, 48px);
          --simple-icon-height: var(--inline-audio-height, 48px);
          margin-bottom: 60px;
        }

        site-active-title h1 {
          font-size: var(--ddd-font-size-l);
          padding: 0;
          margin: 0 0 var(--ddd-spacing-5) 0;
          text-align: start;
          line-height: normal;
        }

        @media only screen and (max-width: 1023px) {
          site-active-title h1 {
            font-size: var(--ddd-font-size-xs);
            margin: 0 0 var(--ddd-spacing-2) 0;
          }
        }
      `]}setMediaType(){this.fileExt=this.mediaSource.split(".").pop(),["mp4","webm","ogg"].includes(this.fileExt)?this.mediaType="video":["png","jpg","jpeg","gif"].includes(this.fileExt)?this.mediaType="image":(this.mediaType="",this.mediaSource="")}__videoHandler(){if("video"==this.mediaType){var i=this.shadowRoot.querySelector("video");this.playing?(i.pause(),this.icon="av:play-circle-outline",this.playing=!1):(i.play(),this.icon="av:pause-circle-outline",this.playing=!0)}}render(){return e`
      ${"image"===this.mediaType?e` <div class="media-banner">
              <img crossorigin="anonymous" src=${this.mediaSource} />
              ${"gif"===this.fileExt?e` <div class="content">
                    <div class="page-title">
                      <site-active-title part="page-title"></site-active-title>
                      ${this.description}
                    </div>
                  </div>`:e``}
            </div>`:"video"===this.mediaType?e`
                <div class="media-banner">
                  <video
                    crossorigin="anonymous"
                    loop
                    autoplay
                    muted
                    playsinline
                  >
                    <source src=${this.mediaSource} type="video/${this.fileExt}" />
                  </video>
                  <div class="content">
                    <div class="page-title">
                      <site-active-title part="page-title"></site-active-title>
                      ${this.description}
                    </div>
                    <simple-icon-button
                      class="icon"
                      title="${this.title}"
                      aria-label="${this.aria}"
                      icon="${this.icon}"
                    ></simple-icon-button>
                  </div>
                </div>
              `:e``}
    </div>`}updated(i){i.forEach(((i,e)=>{"mediaSource"==e&&this.setMediaType()}))}disconnectedCallback(){for(var i in this.__disposer)this.__disposer[i].dispose();super.disconnectedCallback()}}customElements.define(SiteActiveMediaBanner.tag,SiteActiveMediaBanner);