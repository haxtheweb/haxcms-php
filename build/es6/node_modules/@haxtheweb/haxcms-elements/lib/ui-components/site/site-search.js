/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as a}from"../../../../../lit/index.js";import"../../../../simple-fields/lib/simple-fields-field.js";import"../../../../simple-icon/simple-icon.js";import"../../../../simple-icon/lib/simple-icons.js";import"../../../../iframe-loader/lib/loading-indicator.js";import{store as i,HAXcmsStore as r}from"../../core/haxcms-site-store.js";import{HAXCMSI18NMixin as s}from"../../core/utils/HAXCMSI18NMixin.js";import{DDD as d}from"../../../../d-d-d/d-d-d.js";import"../../../../simple-fields/lib/simple-tag.js";import"../../../../lunr-search/lunr-search.js";import"../../../../simple-datetime/simple-datetime.js";class SiteSearch extends(s(d)){static get styles(){return[super.styles,a`
        :host {
          display: block;
          color: light-dark(var(--ddd-primary-4), var(--ddd-accent-6));
        }
        [hidden] {
          display: none;
        }
        a.result {
          display: block;
          background-color: light-dark(
            var(--ddd-theme-default-limestoneLight, var(--ddd-accent-6)),
            var(--ddd-primary-4)
          );
          color: light-dark(var(--ddd-primary-4), var(--ddd-accent-6));
          padding: var(--ddd-spacing-4);
          margin: var(--ddd-spacing-2) 0;
          font-weight: var(--ddd-font-weight-regular);
          border-radius: var(--ddd-radius-xs);
          border: var(--ddd-border-xs)
            light-dark(
              var(--ddd-theme-default-limestoneGray, rgba(0, 0, 0, 0.1)),
              rgba(255, 255, 255, 0.2)
            );
          transition: all var(--ddd-duration-rapid) var(--ddd-theme-easing);
          text-decoration: none;
        }

        .result:hover,
        .result:focus {
          background-color: light-dark(
            var(--ddd-primary-2),
            var(--ddd-primary-10)
          );
          color: light-dark(
            var(--ddd-accent-6, #fff),
            var(--ddd-accent-6, #fff)
          );
          text-decoration: none;
          outline: var(--ddd-border-sm)
            light-dark(var(--ddd-primary-4), var(--ddd-accent-4));
          transform: translateY(-1px);
          box-shadow: var(--ddd-boxShadow-sm);
        }

        .result:hover .title,
        .result:focus .title {
          color: light-dark(
            var(--ddd-accent-6, #fff),
            var(--ddd-accent-6, #fff)
          );
        }

        .result:hover .link-text,
        .result:focus .link-text {
          color: light-dark(rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.9));
        }

        .result:hover div:last-child,
        .result:focus div:last-child {
          color: light-dark(
            rgba(255, 255, 255, 0.85),
            rgba(255, 255, 255, 0.85)
          );
        }

        .result:hover .breadcrumb,
        .result:focus .breadcrumb {
          color: light-dark(rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.8));
        }

        .result:hover simple-datetime,
        .result:focus simple-datetime {
          color: light-dark(rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.9));
        }
        .result .title {
          font-size: var(--ddd-font-size-s);
          margin: 0 0 var(--ddd-spacing-2) 0;
          font-weight: var(--ddd-font-weight-medium);
          font-family: var(--ddd-font-navigation);
        }
        simple-datetime {
          color: light-dark(
            var(--ddd-theme-default-coalyGray, #666),
            var(--ddd-theme-default-limestoneLight, #ccc)
          );
        }
        simple-icon-lite {
          --simple-icon-height: 12px;
          --simple-icon-width: 12px;
          vertical-align: baseline;
        }
        .result .link-text {
          font-size: var(--ddd-font-size-3xs);
          color: light-dark(
            var(--ddd-theme-default-coalyGray, #666),
            var(--ddd-theme-default-limestoneLight, #999)
          );
          font-style: italic;
          padding-left: var(--ddd-spacing-2);
        }
        .results-found-text {
          font-family: var(--ddd-font-navigation);
          font-size: var(--ddd-font-size-m);
          margin: 0 0 var(--ddd-spacing-4) 0;
          padding: 0;
          color: light-dark(var(--ddd-primary-4), var(--ddd-accent-6));
        }
        .result div:last-child {
          font-size: var(--ddd-font-size-xs);
          color: light-dark(
            var(--ddd-theme-default-coalyGray, #555),
            var(--ddd-theme-default-limestoneLight, #bbb)
          );
          margin-top: var(--ddd-spacing-2);
          line-height: var(--ddd-lh-120);
        }
        .result .breadcrumb {
          font-size: var(--ddd-font-size-3xs);
          color: light-dark(
            var(--ddd-theme-default-coalyGray, #777),
            var(--ddd-theme-default-limestoneLight, #aaa)
          );
          margin: var(--ddd-spacing-2) 0;
        }
        .result .breadcrumb simple-icon-lite {
          margin: 0 var(--ddd-spacing-1);
          --simple-icon-height: var(--ddd-icon-3xs);
          --simple-icon-width: var(--ddd-icon-3xs);
        }
        #search {
          flex-grow: 2;
          margin-right: 4px;
          margin-bottom: 0;
          font-size: var(--ddd-font-size-xs);
          --simple-fields-field-color: light-dark(
            black,
            var(--ddd-accent-6, #fff)
          );
          --simple-fields-field-background-color: light-dark(
            var(--ddd-accent-6, #fff),
            var(--ddd-primary-4, #333)
          );
          --simple-fields-field-border-color: light-dark(
            rgba(0, 0, 0, 0.1),
            rgba(255, 255, 255, 0.2)
          );
          --simple-fields-field-placeholder-color: light-dark(
            rgba(0, 0, 0, 0.6),
            rgba(255, 255, 255, 0.7)
          );
        }
        .page-title-icon {
          --simple-icon-height: 32px;
          --simple-icon-width: 32px;
          margin-right: 8px;
          vertical-align: middle;
        }
        simple-tag {
          margin: 0 4px;
        }
        .sr-only {
          position: absolute;
          width: 1px;
          height: 1px;
          padding: 0;
          margin: -1px;
          overflow: hidden;
          clip: rect(0, 0, 0, 0);
          white-space: nowrap;
          border: 0;
        }
        .no-results {
          font-size: var(--ddd-font-size-s);
          color: light-dark(
            var(--ddd-theme-default-coalyGray, #666),
            var(--ddd-theme-default-limestoneLight, #ccc)
          );
          padding: var(--ddd-spacing-4);
          text-align: center;
        }
        .search-results {
          margin-top: var(--ddd-spacing-2);
        }
        .result .tags {
          margin-top: var(--ddd-spacing-2);
        }
        .result .description {
          margin-top: var(--ddd-spacing-2);
        }
      `]}static get tag(){return"site-search"}constructor(){super(),this.HAXCMSI18NMixinBase="../../../",this.t=this.t||{},this.t={...this.t,search:"Search",results:"results",found:"Found",typeAtLeast3LettersToStartSearch:"Type at least 3 letters to start search"},this.whileLoading=!1,this.hideInput=!1,this.search="",this.showPath=!1,this.showDate=!1,this.__results=[]}render(){return t`
      <simple-fields-field
        ?hidden="${this.hideInput}"
        id="search"
        always-float-label
        label="${this.t.search}"
        placeholder="${this.t.typeAtLeast3LettersToStartSearch}.."
        type="text"
        value="${this.search}"
        role="searchbox"
        aria-expanded="${this.__results.length>0?"true":"false"}"
        aria-owns="search-results"
        aria-describedby="search-status"
        @value-changed="${this._searchValueChanged}"
      >
        <simple-icon icon="search" slot="prefix"></simple-icon>
      </simple-fields-field>

      <!-- Screen reader status updates -->
      <div
        id="search-status"
        aria-live="polite"
        aria-atomic="true"
        class="sr-only"
      >
        ${this.whileLoading?"Searching...":this.search.length>0?`${this.__results.length} ${this.t.results} ${this.t.found.toLowerCase()}`:""}
      </div>

      ${this.search.length>0?t`
            <h1 class="results-found-text" aria-hidden="true">
              ${this.t.found} ${this.__results.length} ${this.t.results}.
            </h1>
          `:t``}

      <lunr-search id="lunr"></lunr-search>
      <loading-indicator
        full
        ?loading="${this.whileLoading}"
        aria-label="Loading search results"
      ></loading-indicator>

      ${this.__results.length>0?t`
            <section
              id="search-results"
              role="region"
              aria-label="Search results"
              class="search-results"
            >
              ${this.__results.map(((e,a)=>t`
                  <a
                    class="result"
                    .href="${e.slug?e.slug:e.location}"
                    @click="${this.selectionMade}"
                    tabindex="0"
                    role="option"
                    aria-posinset="${a+1}"
                    aria-setsize="${this.__results.length}"
                    aria-describedby="result-${a}-desc"
                  >
                    <div class="title">
                      ${e.icon?t`<simple-icon-lite
                            class="page-title-icon"
                            icon="${e.icon}"
                            aria-hidden="true"
                          ></simple-icon-lite>`:""}
                      ${e.title}<span
                        ?hidden="${!this.showPath}"
                        class="link-text"
                        aria-hidden="true"
                        >(${e.location})</span
                      >
                      ${e.tags&&""!=e.tags?t`<div class="tags" role="list" aria-label="Tags">
                            ${e.tags.split(",").map((e=>t`<simple-tag
                                    value="${e.trim()}"
                                    role="listitem"
                                  ></simple-tag>`))}
                          </div>`:""}
                    </div>
                    <div class="date" ?hidden="${!this.showDate}">
                      <simple-datetime
                        format="M jS"
                        .timestamp="${e.created}"
                        unix
                        aria-label="Created on"
                        >${e.created}</simple-datetime
                      >
                    </div>
                    ${e.breadcrumb?t`<nav class="breadcrumb" aria-label="Page location">
                          ${e.breadcrumb.map(((e,a)=>t`${0!=a?t`<simple-icon-lite
                                      icon="icons:chevron-right"
                                      aria-hidden="true"
                                    ></simple-icon-lite>`:""}<span>${e.title}</span>`))}
                        </nav>`:""}
                    <div id="result-${a}-desc" class="description">
                      ${e.description}..
                    </div>
                  </a>
                `))}
            </section>
          `:this.search.length>0&&!this.whileLoading?t`<div class="no-results" role="status">
              No results found for "${this.search}"
            </div>`:t``}
    `}selectionMade(e){this.dispatchEvent(new CustomEvent("search-item-selected",{detail:{value:e.detail}})),globalThis.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}_searchValueChanged(e){if(this.search=e.detail.value,this.search){"search"!==i.getInternalRoute()&&globalThis.history.replaceState({},null,"x/search");const e=new URLSearchParams(globalThis.location.search);e.set("search",this.search),globalThis.history.replaceState({},"",decodeURIComponent(`./x/search?${e}`))}}async __resultsChanged(e){if(e.detail.value){setTimeout((()=>{this.whileLoading=!1}),100);let t=e.detail.value;await t.map((async e=>{let t=await i.findItemAsObject(e.location,"slug","item");var a=[{title:t?t.title:""}];let r=t;for(;r&&null!=r.parent;)r=await i.manifest.items.find((e=>e.id==r.parent)),r&&a.unshift({title:r.title});e.breadcrumb=a,t&&(e.slug=t.slug,t.metadata&&t.metadata.pageType&&(e.type=t.metadata.pageType),t.metadata&&t.metadata.icon&&(e.icon=t.metadata.icon),t.metadata&&t.metadata.tags&&(e.tags=t.metadata.tags))})),this.__results=[...t]}else this.__results=[]}static get properties(){return{...super.properties,dataSource:{type:String,attribute:"data-source"},whileLoading:{type:Boolean},showDate:{type:Boolean,attribute:"show-date"},showPath:{type:Boolean,attribute:"show-path"},hideInput:{type:Boolean,attribute:"hide-input"},search:{type:String},__results:{type:Array},t:{type:Object}}}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.shadowRoot.querySelector("#lunr").addEventListener("results-changed",this.__resultsChanged.bind(this))}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{"search"==t&&this[t]&&(this._searchChanged(this[t],e),this.shadowRoot.querySelector("#lunr").search=this[t]),"dataSource"==t&&this[t]&&(this.shadowRoot.querySelector("#lunr").dataSource=this[t])}))}_searchChanged(e,t){e.length>=3&&(this.whileLoading=!0,void 0===this.dataSource&&(this.dataSource="lunrSearchIndex.json"))}}globalThis.customElements.define(SiteSearch.tag,SiteSearch);export{SiteSearch};