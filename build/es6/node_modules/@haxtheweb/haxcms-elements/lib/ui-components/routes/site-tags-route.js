/**
 * Copyright 2022 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{html as t,css as e,nothing as s}from"../../../../../lit/index.js";import{store as a}from"../../core/haxcms-site-store.js";import{HAXCMSI18NMixin as i}from"../../core/utils/HAXCMSI18NMixin.js";import{toJS as r}from"../../../../../mobx/dist/mobx.esm.js";import{DDD as o}from"../../../../d-d-d/d-d-d.js";import"../../../../collection-list/collection-list.js";import"../../../../collection-list/lib/collection-item.js";import"../../../../simple-fields/lib/simple-tag.js";export class SiteTagsRoute extends(i(o)){static get tag(){return"site-tags-route"}static get styles(){return[super.styles,e`
        :host {
          display: block;
          font-size: 16px;
        }

        simple-tag {
          margin: 0 4px 4px 0;
          cursor: pointer;
        }
        simple-tag:hover,
        simple-tag:focus {
          background-color: var(--simple-colors-default-theme-accent-color-3);
          color: var(--simple-colors-default-theme-accent-color-12);
          border-color: var(--simple-colors-default-theme-accent-color-12);
          transition: all 0.3s ease-in-out;
        }

        .all-tags {
          display: block;
        }
      `]}constructor(){super(),this.HAXCMSI18NMixinBase="../../../",this.search=globalThis.location.search,this.t.tags="Tags",this.filteredItems=[],this.resultsTags={},this.params={}}_tagClick(t){let e=t.target.value;const s=new URLSearchParams(this.search);s.set("tag",e.trim()),globalThis.history.replaceState({},"",decodeURIComponent(`./x/tags?${s}`)),this.search=globalThis.location.search}_resetClick(t){const e=new URLSearchParams(this.search);e.delete("tag"),globalThis.history.replaceState({},"",decodeURIComponent(`./x/tags?${e}`)),this.search=globalThis.location.search}_tagKeydown(t){"Enter"===t.key&&this._tagClick(t)}_resetKeydown(t){"Enter"===t.key&&this._resetClick(t)}render(){return t` ${this.params&&this.params.tag?t`<simple-tag
            class="all-tags"
            value="Remove '${this.params.tag}' filter"
            @click="${this._resetClick}"
            @keydown="${this._resetKeydown}"
            tabindex="0"
          ></simple-tag>`:s}
      ${Object.keys(this.resultsTags).map((e=>t`
          ${this.params.tag===e.trim()?s:t`
                <simple-tag
                  accent-color="grey"
                  value="${e.trim()}"
                  @click="${this._tagClick}"
                  @keydown="${this._tagKeydown}"
                  tabindex="0"
                  >${this.resultsTags[e]>1?t` (${this.resultsTags[e]})`:s}</simple-tag
                >
              `}
        `))}
      <collection-list>
        ${this.filteredItems.map((e=>t`
            <collection-item
              line1="${e.title}"
              line2="${e.description}"
              url="${e.slug}"
              image="${e.metadata.image}"
              tags="${e.metadata.tags}"
              icon="${e.metadata.icon}"
              accent-color="grey"
              saturate
            ></collection-item>
          `))}
      </collection-list>`}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{if("search"===e&&this.search){const t=new URLSearchParams(this.search),e=Object.fromEntries(t);this.params={},this.params=e,e.display||(t.set("display",this.params.display||"card"),globalThis.history.replaceState({},"",decodeURIComponent(`./x/tags?${t}`)))}"params"===e&&a.manifest.items&&(this.filteredItems=[...r(a.manifest.items).filter((t=>!this.params.tag||t.metadata.tags&&t.metadata.tags.split(",").some((t=>t.toLowerCase().includes(this.params.tag.toLowerCase())))))]),"filteredItems"===e&&this.updateResultsTags(this.filteredItems)}))}async updateResultsTags(t){let e=[];await t.forEach((async t=>{if(t.metadata.tags){const s=t.metadata.tags.trim().split(",");e.push(...s)}})),this.resultsTags={...this.countDuplicates(e)}}countDuplicates(t){const e={};for(const s of t)e[s]=(e[s]||0)+1;return e}static get properties(){return{...super.properties,search:{type:String},params:{type:Object},filteredItems:{type:Array},resultsTags:{type:Object}}}}globalThis.customElements.define(SiteTagsRoute.tag,SiteTagsRoute);