import{LitElement as e,html as i,css as o}from"../../../../lit/index.js";import{DDDSuper as r}from"../../../d-d-d/d-d-d.js";import{HAXCMSI18NMixin as t}from"./utils/HAXCMSI18NMixin.js";import"../../../code-sample/code-sample.js";import"../../../simple-icon/simple-icon.js";import"../../../simple-icon/lib/simple-icons.js";class HAXCMSShareDialog extends(t(r(e))){static get styles(){return[super.styles,o`
        :host {
          display: block;
          overflow: auto;
          padding: var(--d-d-d-spacing-4);
        }

        .field-group {
          margin-bottom: var(--d-d-d-spacing-6);
        }

        .field-group:last-child {
          margin-bottom: 0;
        }

        label {
          display: block;
          margin-bottom: var(--d-d-d-spacing-2);
          font-size: var(--d-d-d-font-size-l);
          font-weight: var(--d-d-d-font-weight-medium);
          color: var(--d-d-d-color-text-primary);
        }

        input {
          font-size: var(--d-d-d-font-size-m);
          padding: var(--d-d-d-spacing-3);
          border: 2px solid var(--d-d-d-color-border);
          border-radius: var(--d-d-d-border-radius-s);
          width: 100%;
          box-sizing: border-box;
          transition:
            border-color 0.2s ease,
            box-shadow 0.2s ease;
        }

        input[readonly] {
          background-color: var(--d-d-d-color-surface-2);
          cursor: text;
          font-family: var(--d-d-d-font-family-mono);
          font-size: var(--d-d-d-font-size-s);
        }

        input:focus {
          outline: none;
          border-color: var(--d-d-d-color-primary);
          box-shadow: 0 0 0 3px var(--d-d-d-color-primary-alpha-20);
        }

        #link {
          min-width: 600px;
          overflow: auto;
        }

        code-sample {
          margin-top: var(--d-d-d-spacing-2);
          font-size: var(--d-d-d-font-size-m);
        }
      `]}static get tag(){return"haxcms-share-dialog"}render(){return i`
      <div>
        <div class="field-group">
          <label for="link">Share Link</label>
          <input
            type="text"
            id="link"
            value="${this.link}"
            readonly
            title="Click to select all"
          />
        </div>

        <div class="field-group">
          <label for="iframe">Embed Code</label>
          <code-sample
            type="html"
            copy-clipboard-button
            id="iframe"
          ></code-sample>
        </div>

        <div class="field-group">
          <label for="height">Embed Height</label>
          <input
            id="height"
            type="text"
            name="height"
            value="600px"
            @input="${this.calculateShareCode}"
            placeholder="e.g., 600px, 50vh, 400px"
          />
        </div>
      </div>
    `}calculateShareCode(){const e=this.shadowRoot.querySelector("#height"),i=e?e.value:"600px";this.link=globalThis.location.href;var o=`<template>\n      <iframe\n        src="${this.link}"\n        height="${i}"\n        width="100%"\n        frameborder="0"\n        allow="autoplay; encrypted-media; fullscreen; picture-in-picture"\n      ></iframe>\n    </template>`;const r=this.shadowRoot.querySelector("code-sample");r&&(r.innerHTML=o,r._updateContent())}firstUpdated(e){super.firstUpdated(e),this.calculateShareCode()}static get properties(){return{...super.properties,link:{type:String}}}constructor(){super(),this.link=globalThis.location.href}}globalThis.customElements.define(HAXCMSShareDialog.tag,HAXCMSShareDialog);export{HAXCMSShareDialog};